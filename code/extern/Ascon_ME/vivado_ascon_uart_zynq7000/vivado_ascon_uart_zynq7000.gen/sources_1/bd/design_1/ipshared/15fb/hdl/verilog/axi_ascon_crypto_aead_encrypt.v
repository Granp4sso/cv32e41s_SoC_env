// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module axi_ascon_crypto_aead_encrypt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        m_address0,
        m_ce0,
        m_q0,
        ad_address0,
        ad_ce0,
        ad_q0,
        npub_address0,
        npub_ce0,
        npub_q0,
        k_address0,
        k_ce0,
        k_q0,
        grp_ROUND_6_fu_2110_p_din1,
        grp_ROUND_6_fu_2110_p_din2,
        grp_ROUND_6_fu_2110_p_din3,
        grp_ROUND_6_fu_2110_p_din4,
        grp_ROUND_6_fu_2110_p_din5,
        grp_ROUND_6_fu_2110_p_din6,
        grp_ROUND_6_fu_2110_p_dout0_0,
        grp_ROUND_6_fu_2110_p_dout0_1,
        grp_ROUND_6_fu_2110_p_dout0_2,
        grp_ROUND_6_fu_2110_p_dout0_3,
        grp_ROUND_6_fu_2110_p_dout0_4,
        grp_ROUND_6_fu_2110_p_ready
);

parameter    ap_ST_fsm_state1 = 55'd1;
parameter    ap_ST_fsm_state2 = 55'd2;
parameter    ap_ST_fsm_state3 = 55'd4;
parameter    ap_ST_fsm_state4 = 55'd8;
parameter    ap_ST_fsm_state5 = 55'd16;
parameter    ap_ST_fsm_state6 = 55'd32;
parameter    ap_ST_fsm_state7 = 55'd64;
parameter    ap_ST_fsm_state8 = 55'd128;
parameter    ap_ST_fsm_state9 = 55'd256;
parameter    ap_ST_fsm_state10 = 55'd512;
parameter    ap_ST_fsm_state11 = 55'd1024;
parameter    ap_ST_fsm_state12 = 55'd2048;
parameter    ap_ST_fsm_state13 = 55'd4096;
parameter    ap_ST_fsm_state14 = 55'd8192;
parameter    ap_ST_fsm_state15 = 55'd16384;
parameter    ap_ST_fsm_state16 = 55'd32768;
parameter    ap_ST_fsm_state17 = 55'd65536;
parameter    ap_ST_fsm_state18 = 55'd131072;
parameter    ap_ST_fsm_state19 = 55'd262144;
parameter    ap_ST_fsm_state20 = 55'd524288;
parameter    ap_ST_fsm_state21 = 55'd1048576;
parameter    ap_ST_fsm_state22 = 55'd2097152;
parameter    ap_ST_fsm_state23 = 55'd4194304;
parameter    ap_ST_fsm_state24 = 55'd8388608;
parameter    ap_ST_fsm_state25 = 55'd16777216;
parameter    ap_ST_fsm_state26 = 55'd33554432;
parameter    ap_ST_fsm_state27 = 55'd67108864;
parameter    ap_ST_fsm_state28 = 55'd134217728;
parameter    ap_ST_fsm_state29 = 55'd268435456;
parameter    ap_ST_fsm_state30 = 55'd536870912;
parameter    ap_ST_fsm_state31 = 55'd1073741824;
parameter    ap_ST_fsm_state32 = 55'd2147483648;
parameter    ap_ST_fsm_state33 = 55'd4294967296;
parameter    ap_ST_fsm_state34 = 55'd8589934592;
parameter    ap_ST_fsm_state35 = 55'd17179869184;
parameter    ap_ST_fsm_state36 = 55'd34359738368;
parameter    ap_ST_fsm_state37 = 55'd68719476736;
parameter    ap_ST_fsm_state38 = 55'd137438953472;
parameter    ap_ST_fsm_state39 = 55'd274877906944;
parameter    ap_ST_fsm_state40 = 55'd549755813888;
parameter    ap_ST_fsm_state41 = 55'd1099511627776;
parameter    ap_ST_fsm_state42 = 55'd2199023255552;
parameter    ap_ST_fsm_state43 = 55'd4398046511104;
parameter    ap_ST_fsm_state44 = 55'd8796093022208;
parameter    ap_ST_fsm_state45 = 55'd17592186044416;
parameter    ap_ST_fsm_state46 = 55'd35184372088832;
parameter    ap_ST_fsm_state47 = 55'd70368744177664;
parameter    ap_ST_fsm_state48 = 55'd140737488355328;
parameter    ap_ST_fsm_state49 = 55'd281474976710656;
parameter    ap_ST_fsm_state50 = 55'd562949953421312;
parameter    ap_ST_fsm_state51 = 55'd1125899906842624;
parameter    ap_ST_fsm_state52 = 55'd2251799813685248;
parameter    ap_ST_fsm_state53 = 55'd4503599627370496;
parameter    ap_ST_fsm_state54 = 55'd9007199254740992;
parameter    ap_ST_fsm_state55 = 55'd18014398509481984;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] c_address0;
output   c_ce0;
output   c_we0;
output  [7:0] c_d0;
output  [3:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
output  [3:0] ad_address0;
output   ad_ce0;
input  [7:0] ad_q0;
output  [3:0] npub_address0;
output   npub_ce0;
input  [7:0] npub_q0;
output  [3:0] k_address0;
output   k_ce0;
input  [7:0] k_q0;
output  [63:0] grp_ROUND_6_fu_2110_p_din1;
output  [63:0] grp_ROUND_6_fu_2110_p_din2;
output  [63:0] grp_ROUND_6_fu_2110_p_din3;
output  [63:0] grp_ROUND_6_fu_2110_p_din4;
output  [63:0] grp_ROUND_6_fu_2110_p_din5;
output  [7:0] grp_ROUND_6_fu_2110_p_din6;
input  [63:0] grp_ROUND_6_fu_2110_p_dout0_0;
input  [63:0] grp_ROUND_6_fu_2110_p_dout0_1;
input  [63:0] grp_ROUND_6_fu_2110_p_dout0_2;
input  [63:0] grp_ROUND_6_fu_2110_p_dout0_3;
input  [63:0] grp_ROUND_6_fu_2110_p_dout0_4;
input   grp_ROUND_6_fu_2110_p_ready;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] c_address0;
reg c_ce0;
reg c_we0;
reg[7:0] c_d0;
reg m_ce0;
reg ad_ce0;
reg npub_ce0;
reg k_ce0;

(* fsm_encoding = "none" *) reg   [54:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_299;
wire    ap_CS_fsm_state4;
wire    grp_LOADBYTES_fu_174_ap_done;
wire    grp_LOADBYTES_fu_184_ap_done;
reg    ap_block_state4_on_subcall_done;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln29_fu_543_p2;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
reg   [63:0] reg_304;
reg   [63:0] reg_309;
reg   [63:0] reg_314;
reg   [63:0] reg_319;
wire   [63:0] grp_LOADBYTES_fu_174_ap_return;
reg   [63:0] K0_reg_733;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_LOADBYTES_fu_184_ap_return;
reg   [63:0] N0_reg_741;
reg   [63:0] K1_reg_746;
wire   [63:0] s_3_49_fu_342_p2;
reg   [63:0] s_3_49_reg_753;
wire    ap_CS_fsm_state15;
wire   [63:0] s_4_50_fu_347_p2;
reg   [63:0] s_4_50_reg_758;
wire   [3:0] trunc_ln39_fu_397_p1;
reg   [3:0] trunc_ln39_reg_766;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln39_fu_388_p2;
wire   [63:0] s_4_58_fu_483_p2;
reg   [63:0] s_4_58_reg_820;
wire    ap_CS_fsm_state29;
wire   [3:0] trunc_ln57_fu_532_p1;
reg   [3:0] trunc_ln57_reg_831;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln57_fu_526_p2;
wire   [63:0] s_0_75_fu_537_p2;
reg   [63:0] s_0_75_reg_837;
wire    ap_CS_fsm_state32;
wire   [3:0] add_ln29_1_fu_549_p2;
reg   [3:0] add_ln29_1_reg_846;
wire   [7:0] trunc_ln29_3_fu_582_p1;
reg   [7:0] trunc_ln29_3_reg_851;
wire   [3:0] add_ln29_fu_586_p2;
reg   [3:0] add_ln29_reg_856;
wire   [63:0] s_3_75_fu_674_p2;
reg   [63:0] s_3_75_reg_861;
wire    ap_CS_fsm_state51;
wire   [63:0] s_4_77_fu_679_p2;
reg   [63:0] s_4_77_reg_866;
wire    grp_LOADBYTES_fu_174_ap_start;
wire    grp_LOADBYTES_fu_174_ap_idle;
wire    grp_LOADBYTES_fu_174_ap_ready;
wire   [3:0] grp_LOADBYTES_fu_174_bytes_address0;
wire    grp_LOADBYTES_fu_174_bytes_ce0;
reg   [7:0] grp_LOADBYTES_fu_174_bytes_q0;
reg   [3:0] grp_LOADBYTES_fu_174_n;
reg   [3:0] grp_LOADBYTES_fu_174_idx;
wire    grp_LOADBYTES_fu_184_ap_start;
wire    grp_LOADBYTES_fu_184_ap_idle;
wire    grp_LOADBYTES_fu_184_ap_ready;
wire   [3:0] grp_LOADBYTES_fu_184_bytes_address0;
wire    grp_LOADBYTES_fu_184_bytes_ce0;
reg   [3:0] grp_LOADBYTES_fu_184_idx;
reg   [63:0] grp_ROUND_6_fu_199_s_0_read;
reg   [63:0] grp_ROUND_6_fu_199_s_1_read;
reg   [63:0] grp_ROUND_6_fu_199_s_2_read;
reg   [63:0] grp_ROUND_6_fu_199_s_3_read;
reg   [63:0] grp_ROUND_6_fu_199_s_4_read;
reg   [7:0] grp_ROUND_6_fu_199_C;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_done;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_idle;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_ready;
wire   [4:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_d0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_done;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_idle;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_ready;
wire   [4:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_d0;
reg   [3:0] i_reg_163;
wire    ap_CS_fsm_state34;
reg    grp_LOADBYTES_fu_174_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_LOADBYTES_fu_184_ap_start_reg;
wire   [63:0] s_0_56_fu_434_p2;
wire    ap_CS_fsm_state23;
wire   [63:0] s_0_49_fu_472_p2;
wire    ap_CS_fsm_state39;
wire   [63:0] s_0_63_fu_647_p2;
wire   [63:0] s_1_60_fu_654_p2;
wire   [63:0] s_2_60_fu_660_p2;
reg    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start_reg;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
reg    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start_reg;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire   [63:0] zext_ln29_1_fu_612_p1;
reg   [4:0] idx_fu_94;
wire   [4:0] add_ln39_fu_408_p2;
reg   [4:0] adlen_assign_fu_98;
wire   [4:0] add_ln44_fu_402_p2;
reg   [63:0] s_0_45_fu_102;
reg   [63:0] s_1_fu_106;
reg   [63:0] s_2_fu_110;
reg   [63:0] s_3_10_fu_114;
wire    ap_CS_fsm_state16;
reg   [63:0] s_4_fu_118;
reg   [4:0] idx94_fu_122;
wire   [4:0] add_ln57_fu_596_p2;
reg   [4:0] mlen_assign_fu_126;
wire   [4:0] add_ln64_fu_591_p2;
reg   [63:0] s_0_48_fu_130;
reg   [63:0] s_1_47_fu_134;
reg   [63:0] s_2_47_fu_138;
reg   [63:0] s_3_50_fu_142;
reg   [63:0] s_4_51_fu_146;
wire    ap_CS_fsm_state30;
wire   [1:0] tmp_4_fu_378_p4;
wire   [63:0] xor_ln48_fu_466_p2;
wire   [1:0] tmp_5_fu_516_p4;
wire   [2:0] trunc_ln29_fu_555_p1;
wire   [5:0] shl_ln_fu_559_p3;
wire   [5:0] sub_ln29_fu_567_p2;
wire   [63:0] zext_ln29_fu_573_p1;
wire   [63:0] lshr_ln29_fu_577_p2;
wire   [63:0] xor_ln69_fu_641_p2;
reg   [54:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
reg    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
reg    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
reg    ap_ST_fsm_state55_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 55'd1;
#0 grp_LOADBYTES_fu_174_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_fu_184_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start_reg = 1'b0;
end

axi_ascon_LOADBYTES grp_LOADBYTES_fu_174(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_fu_174_ap_start),
    .ap_done(grp_LOADBYTES_fu_174_ap_done),
    .ap_idle(grp_LOADBYTES_fu_174_ap_idle),
    .ap_ready(grp_LOADBYTES_fu_174_ap_ready),
    .bytes_address0(grp_LOADBYTES_fu_174_bytes_address0),
    .bytes_ce0(grp_LOADBYTES_fu_174_bytes_ce0),
    .bytes_q0(grp_LOADBYTES_fu_174_bytes_q0),
    .n(grp_LOADBYTES_fu_174_n),
    .idx(grp_LOADBYTES_fu_174_idx),
    .ap_return(grp_LOADBYTES_fu_174_ap_return)
);

axi_ascon_LOADBYTES grp_LOADBYTES_fu_184(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_fu_184_ap_start),
    .ap_done(grp_LOADBYTES_fu_184_ap_done),
    .ap_idle(grp_LOADBYTES_fu_184_ap_idle),
    .ap_ready(grp_LOADBYTES_fu_184_ap_ready),
    .bytes_address0(grp_LOADBYTES_fu_184_bytes_address0),
    .bytes_ce0(grp_LOADBYTES_fu_184_bytes_ce0),
    .bytes_q0(npub_q0),
    .n(4'd8),
    .idx(grp_LOADBYTES_fu_184_idx),
    .ap_return(grp_LOADBYTES_fu_184_ap_return)
);

axi_ascon_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start),
    .ap_done(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_ready),
    .s_3_39(s_3_75_reg_861),
    .c_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_address0),
    .c_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_ce0),
    .c_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_we0),
    .c_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_d0)
);

axi_ascon_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start),
    .ap_done(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_ready),
    .s_4_39(s_4_77_reg_866),
    .c_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_address0),
    .c_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_ce0),
    .c_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_we0),
    .c_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_fu_174_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln57_fu_526_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln39_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln57_fu_526_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln39_fu_388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
            grp_LOADBYTES_fu_174_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_fu_174_ap_ready == 1'b1)) begin
            grp_LOADBYTES_fu_174_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_fu_184_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_LOADBYTES_fu_184_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_fu_184_ap_ready == 1'b1)) begin
            grp_LOADBYTES_fu_184_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state54)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state52)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        adlen_assign_fu_98 <= 5'd16;
    end else if (((icmp_ln39_fu_388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        adlen_assign_fu_98 <= add_ln44_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (grp_LOADBYTES_fu_174_ap_done == 1'b1))) begin
        i_reg_163 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        i_reg_163 <= add_ln29_1_reg_846;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        idx94_fu_122 <= 5'd0;
    end else if (((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        idx94_fu_122 <= add_ln57_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        idx_fu_94 <= 5'd0;
    end else if (((icmp_ln39_fu_388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        idx_fu_94 <= add_ln39_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        mlen_assign_fu_126 <= 5'd16;
    end else if (((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        mlen_assign_fu_126 <= add_ln64_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        s_3_10_fu_114 <= s_3_49_reg_753;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        s_3_10_fu_114 <= grp_ROUND_6_fu_2110_p_dout0_3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        s_4_51_fu_146 <= s_4_58_reg_820;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        s_4_51_fu_146 <= grp_ROUND_6_fu_2110_p_dout0_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        s_4_fu_118 <= s_4_50_reg_758;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        s_4_fu_118 <= grp_ROUND_6_fu_2110_p_dout0_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        K0_reg_733 <= grp_LOADBYTES_fu_174_ap_return;
        N0_reg_741 <= grp_LOADBYTES_fu_184_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        K1_reg_746 <= grp_LOADBYTES_fu_174_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln29_1_reg_846 <= add_ln29_1_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        add_ln29_reg_856 <= add_ln29_fu_586_p2;
        trunc_ln29_3_reg_851 <= trunc_ln29_3_fu_582_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state40) & (grp_LOADBYTES_fu_174_ap_done == 1'b1)) 
    | ((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33)) | ((1'b1 == ap_CS_fsm_state24) & (grp_LOADBYTES_fu_174_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (grp_LOADBYTES_fu_174_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done)))) begin
        reg_299 <= grp_ROUND_6_fu_2110_p_dout0_0;
        reg_304 <= grp_ROUND_6_fu_2110_p_dout0_1;
        reg_309 <= grp_ROUND_6_fu_2110_p_dout0_2;
        reg_314 <= grp_ROUND_6_fu_2110_p_dout0_3;
        reg_319 <= grp_ROUND_6_fu_2110_p_dout0_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15))) begin
        s_0_45_fu_102 <= grp_ROUND_6_fu_2110_p_dout0_0;
        s_1_fu_106 <= grp_ROUND_6_fu_2110_p_dout0_1;
        s_2_fu_110 <= grp_ROUND_6_fu_2110_p_dout0_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29))) begin
        s_0_48_fu_130 <= grp_ROUND_6_fu_2110_p_dout0_0;
        s_1_47_fu_134 <= grp_ROUND_6_fu_2110_p_dout0_1;
        s_2_47_fu_138 <= grp_ROUND_6_fu_2110_p_dout0_2;
        s_3_50_fu_142 <= grp_ROUND_6_fu_2110_p_dout0_3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        s_0_75_reg_837 <= s_0_75_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        s_3_49_reg_753 <= s_3_49_fu_342_p2;
        s_4_50_reg_758 <= s_4_50_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        s_3_75_reg_861 <= s_3_75_fu_674_p2;
        s_4_77_reg_866 <= s_4_77_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        s_4_58_reg_820 <= s_4_58_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        trunc_ln39_reg_766 <= trunc_ln39_fu_397_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_526_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        trunc_ln57_reg_831 <= trunc_ln57_fu_532_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        ad_ce0 = grp_LOADBYTES_fu_174_bytes_ce0;
    end else begin
        ad_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_fu_174_ap_done == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_fu_174_ap_done == 1'b0)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_fu_174_ap_done == 1'b0)) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_fu_174_ap_done == 1'b0)) begin
        ap_ST_fsm_state40_blk = 1'b1;
    end else begin
        ap_ST_fsm_state40_blk = 1'b0;
    end
end

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_done == 1'b0)) begin
        ap_ST_fsm_state53_blk = 1'b1;
    end else begin
        ap_ST_fsm_state53_blk = 1'b0;
    end
end

assign ap_ST_fsm_state54_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_done == 1'b0)) begin
        ap_ST_fsm_state55_blk = 1'b1;
    end else begin
        ap_ST_fsm_state55_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        c_address0 = zext_ln29_1_fu_612_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        c_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_address0;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        c_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        c_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_ce0;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        c_d0 = trunc_ln29_3_reg_851;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        c_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_d0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_d0;
    end else begin
        c_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        c_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        c_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_c_we0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        c_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_c_we0;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_LOADBYTES_fu_174_bytes_q0 = m_q0;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_LOADBYTES_fu_174_bytes_q0 = ad_q0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_LOADBYTES_fu_174_bytes_q0 = k_q0;
    end else begin
        grp_LOADBYTES_fu_174_bytes_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_LOADBYTES_fu_174_idx = trunc_ln57_reg_831;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_LOADBYTES_fu_174_idx = trunc_ln39_reg_766;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_LOADBYTES_fu_174_idx = 4'd8;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_LOADBYTES_fu_174_idx = 4'd0;
    end else begin
        grp_LOADBYTES_fu_174_idx = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_LOADBYTES_fu_174_n = 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_LOADBYTES_fu_174_n = 4'd8;
    end else begin
        grp_LOADBYTES_fu_174_n = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_LOADBYTES_fu_184_idx = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_fu_184_idx = 4'd0;
    end else begin
        grp_LOADBYTES_fu_184_idx = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_ROUND_6_fu_199_C = 8'd75;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_ROUND_6_fu_199_C = 8'd90;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_ROUND_6_fu_199_C = 8'd105;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_ROUND_6_fu_199_C = 8'd120;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_ROUND_6_fu_199_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10) | ((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33)))) begin
        grp_ROUND_6_fu_199_C = 8'd150;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_6_fu_199_C = 8'd165;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_ROUND_6_fu_199_C = 8'd180;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_ROUND_6_fu_199_C = 8'd195;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_6_fu_199_C = 8'd210;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_6_fu_199_C = 8'd225;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_ROUND_6_fu_199_C = 8'd240;
    end else begin
        grp_ROUND_6_fu_199_C = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_ROUND_6_fu_199_s_0_read = s_0_63_fu_647_p2;
    end else if (((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        grp_ROUND_6_fu_199_s_0_read = s_0_75_reg_837;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_ROUND_6_fu_199_s_0_read = s_0_49_fu_472_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_6_fu_199_s_0_read = s_0_56_fu_434_p2;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 
    == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_6_fu_199_s_0_read = reg_299;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_6_fu_199_s_0_read = 64'd9241399655273594880;
    end else begin
        grp_ROUND_6_fu_199_s_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_ROUND_6_fu_199_s_1_read = s_1_60_fu_654_p2;
    end else if (((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        grp_ROUND_6_fu_199_s_1_read = s_1_47_fu_134;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_ROUND_6_fu_199_s_1_read = s_1_fu_106;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 
    == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_6_fu_199_s_1_read = reg_304;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_6_fu_199_s_1_read = K0_reg_733;
    end else begin
        grp_ROUND_6_fu_199_s_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_ROUND_6_fu_199_s_2_read = s_2_60_fu_660_p2;
    end else if (((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        grp_ROUND_6_fu_199_s_2_read = s_2_47_fu_138;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_ROUND_6_fu_199_s_2_read = s_2_fu_110;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 
    == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_6_fu_199_s_2_read = reg_309;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_6_fu_199_s_2_read = grp_LOADBYTES_fu_174_ap_return;
    end else begin
        grp_ROUND_6_fu_199_s_2_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33)))) begin
        grp_ROUND_6_fu_199_s_3_read = s_3_50_fu_142;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_ROUND_6_fu_199_s_3_read = s_3_10_fu_114;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 
    == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_6_fu_199_s_3_read = reg_314;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_6_fu_199_s_3_read = N0_reg_741;
    end else begin
        grp_ROUND_6_fu_199_s_3_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33)))) begin
        grp_ROUND_6_fu_199_s_4_read = s_4_51_fu_146;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_ROUND_6_fu_199_s_4_read = s_4_fu_118;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 
    == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_6_fu_199_s_4_read = reg_319;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_6_fu_199_s_4_read = grp_LOADBYTES_fu_184_ap_return;
    end else begin
        grp_ROUND_6_fu_199_s_4_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        k_ce0 = grp_LOADBYTES_fu_174_bytes_ce0;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state40))) begin
        m_ce0 = grp_LOADBYTES_fu_174_bytes_ce0;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        npub_ce0 = grp_LOADBYTES_fu_184_bytes_ce0;
    end else begin
        npub_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln39_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (grp_LOADBYTES_fu_174_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_LOADBYTES_fu_174_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln57_fu_526_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (grp_LOADBYTES_fu_174_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln29_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (grp_LOADBYTES_fu_174_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ad_address0 = grp_LOADBYTES_fu_174_bytes_address0;

assign add_ln29_1_fu_549_p2 = (i_reg_163 + 4'd1);

assign add_ln29_fu_586_p2 = (i_reg_163 + trunc_ln57_reg_831);

assign add_ln39_fu_408_p2 = (idx_fu_94 + 5'd8);

assign add_ln44_fu_402_p2 = ($signed(adlen_assign_fu_98) + $signed(5'd24));

assign add_ln57_fu_596_p2 = (idx94_fu_122 + 5'd8);

assign add_ln64_fu_591_p2 = ($signed(mlen_assign_fu_126) + $signed(5'd24));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_LOADBYTES_fu_184_ap_done == 1'b0) | (grp_LOADBYTES_fu_174_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_LOADBYTES_fu_184_ap_done == 1'b0) | (grp_LOADBYTES_fu_174_ap_done == 1'b0));
end

assign grp_LOADBYTES_fu_174_ap_start = grp_LOADBYTES_fu_174_ap_start_reg;

assign grp_LOADBYTES_fu_184_ap_start = grp_LOADBYTES_fu_184_ap_start_reg;

assign grp_ROUND_6_fu_2110_p_din1 = grp_ROUND_6_fu_199_s_0_read;

assign grp_ROUND_6_fu_2110_p_din2 = grp_ROUND_6_fu_199_s_1_read;

assign grp_ROUND_6_fu_2110_p_din3 = grp_ROUND_6_fu_199_s_2_read;

assign grp_ROUND_6_fu_2110_p_din4 = grp_ROUND_6_fu_199_s_3_read;

assign grp_ROUND_6_fu_2110_p_din5 = grp_ROUND_6_fu_199_s_4_read;

assign grp_ROUND_6_fu_2110_p_din6 = grp_ROUND_6_fu_199_C;

assign grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_11_fu_231_ap_start_reg;

assign grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_29_1_fu_224_ap_start_reg;

assign icmp_ln29_fu_543_p2 = ((i_reg_163 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_388_p2 = ((tmp_4_fu_378_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_526_p2 = ((tmp_5_fu_516_p4 == 2'd0) ? 1'b1 : 1'b0);

assign k_address0 = grp_LOADBYTES_fu_174_bytes_address0;

assign lshr_ln29_fu_577_p2 = s_0_75_reg_837 >> zext_ln29_fu_573_p1;

assign m_address0 = grp_LOADBYTES_fu_174_bytes_address0;

assign npub_address0 = grp_LOADBYTES_fu_184_bytes_address0;

assign s_0_49_fu_472_p2 = (xor_ln48_fu_466_p2 ^ 64'd9223372036854775808);

assign s_0_56_fu_434_p2 = (s_0_45_fu_102 ^ grp_LOADBYTES_fu_174_ap_return);

assign s_0_63_fu_647_p2 = (xor_ln69_fu_641_p2 ^ 64'd9223372036854775808);

assign s_0_75_fu_537_p2 = (s_0_48_fu_130 ^ grp_LOADBYTES_fu_174_ap_return);

assign s_1_60_fu_654_p2 = (s_1_47_fu_134 ^ K0_reg_733);

assign s_2_60_fu_660_p2 = (s_2_47_fu_138 ^ K1_reg_746);

assign s_3_49_fu_342_p2 = (grp_ROUND_6_fu_2110_p_dout0_3 ^ K0_reg_733);

assign s_3_75_fu_674_p2 = (grp_ROUND_6_fu_2110_p_dout0_3 ^ K0_reg_733);

assign s_4_50_fu_347_p2 = (grp_ROUND_6_fu_2110_p_dout0_4 ^ K1_reg_746);

assign s_4_58_fu_483_p2 = (grp_ROUND_6_fu_2110_p_dout0_4 ^ 64'd1);

assign s_4_77_fu_679_p2 = (grp_ROUND_6_fu_2110_p_dout0_4 ^ K1_reg_746);

assign shl_ln_fu_559_p3 = {{trunc_ln29_fu_555_p1}, {3'd0}};

assign sub_ln29_fu_567_p2 = ($signed(6'd56) - $signed(shl_ln_fu_559_p3));

assign tmp_4_fu_378_p4 = {{adlen_assign_fu_98[4:3]}};

assign tmp_5_fu_516_p4 = {{mlen_assign_fu_126[4:3]}};

assign trunc_ln29_3_fu_582_p1 = lshr_ln29_fu_577_p2[7:0];

assign trunc_ln29_fu_555_p1 = i_reg_163[2:0];

assign trunc_ln39_fu_397_p1 = idx_fu_94[3:0];

assign trunc_ln57_fu_532_p1 = idx94_fu_122[3:0];

assign xor_ln48_fu_466_p2 = (s_0_45_fu_102 ^ grp_LOADBYTES_fu_174_ap_return);

assign xor_ln69_fu_641_p2 = (s_0_48_fu_130 ^ grp_LOADBYTES_fu_174_ap_return);

assign zext_ln29_1_fu_612_p1 = add_ln29_reg_856;

assign zext_ln29_fu_573_p1 = sub_ln29_fu_567_p2;

endmodule //axi_ascon_crypto_aead_encrypt
